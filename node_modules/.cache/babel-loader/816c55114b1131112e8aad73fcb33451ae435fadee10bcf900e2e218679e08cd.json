{"ast":null,"code":"var _jsxFileName = \"/home/shan/Desktop/TT/TopTunes/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport TopSongs from './components/topsongs/TopSongs';\nimport Playlist from './components/playlist/Playlist';\nimport Tracklist from './components/tracklist/Tracklist';\nimport { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // define states\n  const [tracklist, setTracklist] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n  const [playlistName, setPlaylistName] = useState('');\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n  const updateTracklist = array => {\n    setTracklist(array);\n  };\n  const addToPlaylist = newTrack => {\n    if (playlist.some(t => t.id === newTrack.id)) {} else {\n      setPlaylist(prev => [...prev, newTrack]);\n    }\n  };\n  const removeFromPlaylist = trackId => {\n    setPlaylist(prev => prev.filter(n => n.id !== trackId));\n  };\n  const currentUser = async () => {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        localStorage.removeItem(\"token\");\n        window.location.reload();\n        throw new Error('Network response was not ok');\n      }\n      const userData = await response.json();\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const fetchCurrentUser = useCallback(async () => {}, []);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userData = await fetchCurrentUser();\n        setUser(userData);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    if (token) {\n      fetchUserData();\n    }\n  }, [token, fetchCurrentUser]);\n\n  // Function to create a playlist (assuming you have the user's ID)\n  const createPlaylist = async (userId, playlistName, token) => {\n    try {\n      let playlistId; // initialize variable to store playlist id\n\n      // Create the playlist\n      const createResponse = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: playlistName,\n          description: \"New playlist created by app\",\n          public: false\n        })\n      });\n      if (!createResponse.ok) {\n        throw new Error('Error in createPlaylist. Network response was not ok');\n      }\n      const createJsonResponse = await createResponse.json();\n      playlistId = createJsonResponse.id;\n      let uriArray = playlist.map(track => track.uri);\n      const addTracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uris: uriArray,\n          position: 0\n        })\n      });\n      if (!addTracksResponse.ok) {\n        throw new Error('Error in adding tracks to the playlist. Network response was not ok');\n      }\n      setPlaylist([]);\n      setPlaylistName('');\n      alert(`Your playlist ${playlistName} was successfully created!`);\n      return addTracksResponse.json();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Logout function\n  const Logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  const saveTrack = async trackId => {\n    let curToken = token;\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/me/tracks?ids=${trackId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${curToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ids: [trackId]\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error saving track');\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TopTunes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create a playlist with your top songs on Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search.Select.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Logout,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: user ? user.display_name : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopSongs, {\n      token: token,\n      updateTracklist: updateTracklist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Tracklist, {\n        data: tracklist,\n        addToPlaylist: addToPlaylist,\n        saveTrack: saveTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        className: \"flexItem\",\n        playlist: playlist,\n        data: tracklist,\n        removeFromPlaylist: removeFromPlaylist,\n        setPlaylistName: setPlaylistName,\n        playlistName: playlistName,\n        currentUser: currentUser,\n        createPlaylist: createPlaylist,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3I5zIBFQzTY8rOVBnjMyEZixe08=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopSongs","Playlist","Tracklist","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","tracklist","setTracklist","playlist","setPlaylist","playlistName","setPlaylistName","token","setToken","user","setUser","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","updateTracklist","array","addToPlaylist","newTrack","some","t","id","prev","removeFromPlaylist","trackId","filter","n","currentUser","response","fetch","method","headers","Authorization","ok","removeItem","reload","Error","userData","json","error","fetchCurrentUser","fetchUserData","console","createPlaylist","userId","playlistId","createResponse","body","JSON","stringify","name","description","public","createJsonResponse","uriArray","map","track","uri","addTracksResponse","uris","position","alert","Logout","saveTrack","curToken","ids","className","style","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","display_name","data","_c","$RefreshReg$"],"sources":["/home/shan/Desktop/TT/TopTunes/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport TopSongs from './components/topsongs/TopSongs';\nimport Playlist from './components/playlist/Playlist';\nimport Tracklist from './components/tracklist/Tracklist';\nimport { useState, useEffect, useCallback } from 'react';\n\n\nfunction App() {\n  // define states\n  const [tracklist, setTracklist] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n  const [playlistName, setPlaylistName] = useState('');\n  const [token, setToken] = useState(\"\")\n  const [user, setUser] = useState(null); \n\n\n  useEffect(() => {\n    const hash = window.location.hash\n    let token = window.localStorage.getItem(\"token\")\n\n    if (!token && hash) {\n        token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n        window.location.hash = \"\"\n        window.localStorage.setItem(\"token\", token)\n    } \n    setToken(token)\n\n  }, [])\n  \n  const updateTracklist = (array) => {\n    setTracklist(array);\n  }\n\n  const addToPlaylist = (newTrack) => {\n    if (playlist.some((t) => t.id === newTrack.id)) {\n    } else {\n      setPlaylist((prev) => [...prev, newTrack]); \n    }\n    \n  };\n\n  const removeFromPlaylist = (trackId) => {\n    setPlaylist((prev) => prev.filter(n => n.id !== trackId));\n  };\n\n  const currentUser = async () => {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      if (!response.ok) {\n        localStorage.removeItem(\"token\");\n        window.location.reload(); \n        throw new Error('Network response was not ok');\n      }\n  \n      const userData = await response.json();\n      return userData; \n\n    } catch (error) {\n      throw error; \n    }\n  }\n\n    const fetchCurrentUser  = useCallback(async () => {\n    }, []); \n\n\n    useEffect(() => {\n      const fetchUserData = async () => {\n        try {\n          const userData = await fetchCurrentUser ();\n          setUser(userData);\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      };\n\n      if (token) {\n        fetchUserData();\n      }\n    }, [token, fetchCurrentUser]);\n  \n \n  // Function to create a playlist (assuming you have the user's ID)\n  const createPlaylist = async (userId, playlistName, token) => {\n    try {\n      let playlistId; // initialize variable to store playlist id\n  \n      // Create the playlist\n      const createResponse = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: playlistName,\n          description: \"New playlist created by app\",\n          public: false\n        })\n      });\n  \n      if (!createResponse.ok) {\n        throw new Error('Error in createPlaylist. Network response was not ok');\n      }\n  \n      const createJsonResponse = await createResponse.json();\n      playlistId = createJsonResponse.id; \n  \n      let uriArray = playlist.map(track => track.uri); \n  \n      const addTracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uris: uriArray, \n          position: 0,\n        })\n      });\n  \n      if (!addTracksResponse.ok) {\n        throw new Error('Error in adding tracks to the playlist. Network response was not ok');\n      }\n  \n      setPlaylist([]); \n      setPlaylistName(''); \n  \n      alert(`Your playlist ${playlistName} was successfully created!`); \n  \n      return addTracksResponse.json();\n    } catch (error) {\n      throw error; \n    }\n  }\n\n  // Logout function\n  const Logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();   \n  }\n\n  const saveTrack = async (trackId) => {\n    \n    let curToken = token;\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/me/tracks?ids=${trackId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${curToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ids: [\n            trackId,\n          ],\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error saving track');\n      }\n\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  return (\n    <div className=\"App\" style={{minHeight: '100vh'}}>\n      <div className=\"title\">\n        <h2>TopTunes</h2>\n        <h1>Create a playlist with your top songs on Spotify</h1>\n        <h3>Search.Select.</h3>\n        <div className='userInfo'>\n          <button onClick={Logout}><b>{user ? user.display_name : ''}</b></button>\n        </div>\n      </div>\n      <TopSongs token={token} updateTracklist={updateTracklist} />\n      {token ? (\n        <div className='flex'>\n          <Tracklist data={tracklist} addToPlaylist={addToPlaylist} saveTrack={saveTrack} />\n          <Playlist\n            className='flexItem'\n            playlist={playlist}\n            data={tracklist}\n            removeFromPlaylist={removeFromPlaylist}\n            setPlaylistName={setPlaylistName}\n            playlistName={playlistName}\n            currentUser={currentUser}\n            createPlaylist={createPlaylist}\n            token={token} />\n        </div>\n      )\n        :\n        ''\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}