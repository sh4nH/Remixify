{"ast":null,"code":"var _jsxFileName = \"/home/shan/Desktop/TT/TopTunes/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport TopSongs from './components/topsongs/TopSongs';\nimport Playlist from './components/playlist/Playlist';\nimport Tracklist from './components/tracklist/Tracklist';\nimport { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // define states\n  const [tracklist, setTracklist] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n  const [playlistName, setPlaylistName] = useState('');\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(null); // Initialize with null or an empty object\n\n  // on mount: grab token stored in local storage\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n\n  // function to update tracklist, will be called by TopSongs.js after getting results\n  const updateTracklist = array => {\n    setTracklist(array);\n  };\n\n  // function to add tracks to playlist, will be called from Track.js\n  const addToPlaylist = newTrack => {\n    if (playlist.some(t => t.id === newTrack.id)) {} else {\n      setPlaylist(prev => [...prev, newTrack]);\n    }\n  };\n\n  // function to remove tracks from playlist, will be called from Track.js\n  const removeFromPlaylist = trackId => {\n    setPlaylist(prev => prev.filter(n => n.id !== trackId));\n  };\n\n  // function to get user data\n  const currentUser = async () => {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        localStorage.removeItem(\"token\");\n        window.location.reload();\n        throw new Error('Network response was not ok');\n      }\n      const userData = await response.json();\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Define the currentUser function using useCallback\n  const fetchCurrentUser = useCallback(async () => {\n    // Your code to fetch user data here\n  }, []); // Empty dependency array since currentUser doesn't depend on any props or state\n\n  // update the user state\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userData = await fetchCurrentUser();\n        setUser(userData);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    if (token) {\n      fetchUserData();\n    }\n  }, [token, fetchCurrentUser]);\n\n  // Function to create a playlist (assuming you have the user's ID)\n  const createPlaylist = async (userId, playlistName, token) => {\n    // ... (unchanged code for playlist creation)\n  };\n\n  // Logout function\n  const userProfileClickHandler = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TopTunes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopSongs, {\n      token: token,\n      updateTracklist: updateTracklist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Tracklist, {\n        data: tracklist,\n        addToPlaylist: addToPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        className: \"flexItem\",\n        playlist: playlist,\n        data: tracklist,\n        removeFromPlaylist: removeFromPlaylist,\n        setPlaylistName: setPlaylistName,\n        playlistName: playlistName,\n        currentUser: currentUser,\n        createPlaylist: createPlaylist,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3I5zIBFQzTY8rOVBnjMyEZixe08=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopSongs","Playlist","Tracklist","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","tracklist","setTracklist","playlist","setPlaylist","playlistName","setPlaylistName","token","setToken","user","setUser","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","updateTracklist","array","addToPlaylist","newTrack","some","t","id","prev","removeFromPlaylist","trackId","filter","n","currentUser","response","fetch","method","headers","Authorization","ok","removeItem","reload","Error","userData","json","error","fetchCurrentUser","fetchUserData","console","createPlaylist","userId","userProfileClickHandler","className","style","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/home/shan/Desktop/TT/TopTunes/src/App.js"],"sourcesContent":["import './App.css';\nimport TopSongs from './components/topsongs/TopSongs';\nimport Playlist from './components/playlist/Playlist';\nimport Tracklist from './components/tracklist/Tracklist';\nimport { useState, useEffect, useCallback } from 'react';\n\nfunction App() {\n  // define states\n  const [tracklist, setTracklist] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n  const [playlistName, setPlaylistName] = useState('');\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(null); // Initialize with null or an empty object\n\n  // on mount: grab token stored in local storage\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    } \n    setToken(token);\n  }, []);\n\n  // function to update tracklist, will be called by TopSongs.js after getting results\n  const updateTracklist = (array) => {\n    setTracklist(array);\n  }\n\n  // function to add tracks to playlist, will be called from Track.js\n  const addToPlaylist = (newTrack) => {\n    if (playlist.some((t) => t.id === newTrack.id)) {\n    } else {\n      setPlaylist((prev) => [...prev, newTrack]);\n    }\n  };\n\n  // function to remove tracks from playlist, will be called from Track.js\n  const removeFromPlaylist = (trackId) => {\n    setPlaylist((prev) => prev.filter(n => n.id !== trackId));\n  };\n\n  // function to get user data\n  const currentUser = async () => {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        localStorage.removeItem(\"token\");\n        window.location.reload(); \n        throw new Error('Network response was not ok');\n      }\n\n      const userData = await response.json();\n      return userData; \n    } catch (error) {\n      throw error; \n    }\n  }\n\n  // Define the currentUser function using useCallback\n  const fetchCurrentUser  = useCallback(async () => {\n    // Your code to fetch user data here\n  }, []); // Empty dependency array since currentUser doesn't depend on any props or state\n\n  // update the user state\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userData = await fetchCurrentUser();\n        setUser(userData);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n\n    if (token) {\n      fetchUserData();\n    }\n  }, [token, fetchCurrentUser]);\n\n  // Function to create a playlist (assuming you have the user's ID)\n  const createPlaylist = async (userId, playlistName, token) => {\n    // ... (unchanged code for playlist creation)\n  }\n\n  // Logout function\n  const userProfileClickHandler = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();   \n  }\n\n  return (\n    <div className=\"App\" style={{minHeight: '100vh'}}>\n      <div className=\"title\">\n        <h1>TopTunes</h1>\n      </div>\n      <TopSongs token={token} updateTracklist={updateTracklist} />\n      {token ? (\n        <div className='flex'>\n          <Tracklist data={tracklist} addToPlaylist={addToPlaylist} />\n          <Playlist\n            className='flexItem'\n            playlist={playlist}\n            data={tracklist}\n            removeFromPlaylist={removeFromPlaylist}\n            setPlaylistName={setPlaylistName}\n            playlistName={playlistName}\n            currentUser={currentUser}\n            createPlaylist={createPlaylist}\n            token={token}\n          />\n        </div>\n      ) : ''}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}