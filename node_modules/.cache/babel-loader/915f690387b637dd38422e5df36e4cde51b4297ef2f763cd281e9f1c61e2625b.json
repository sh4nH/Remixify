{"ast":null,"code":"var _jsxFileName = \"/home/shan/Desktop/remixify/toptunes/src/components/TopTracks/TopTracks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopTracks = ({\n  token,\n  logout\n}) => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const fetchTopTracks = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTracks(data.items);\n    } catch (error) {\n      console.error(\"Error fetching top tracks:\", error);\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      fetchTopTracks();\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: track.name\n    }, track.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TopTracks, \"f0kRKS0z35esRkLUBB+Oc19rjkA=\");\n_c = TopTracks;\nexport default TopTracks;\nvar _c;\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TopTracks","token","logout","_s","tracks","setTracks","fetchTopTracks","data","get","headers","Authorization","items","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","track","name","id","_c","$RefreshReg$"],"sources":["/home/shan/Desktop/remixify/toptunes/src/components/TopTracks/TopTracks.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nconst TopTracks = ({ token, logout }) => {\n    const [tracks, setTracks] = useState([]);\n\n    const fetchTopTracks = async () => {\n        try {\n            const { data } = await axios.get('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                },\n            });\n\n            setTracks(data.items);\n        } catch (error) {\n            console.error(\"Error fetching top tracks:\", error);\n        }\n    };\n\n    useEffect(() => {\n        if (token) {\n            fetchTopTracks();\n        }\n    }, [token]);\n\n    return (\n        <div>\n            <h2>Top tracks</h2>\n            {tracks.map(track => (\n                <div key={track.id}>\n                    {track.name}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TopTracks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mDAAmD,EAAE;QAClFC,OAAO,EAAE;UACLC,aAAa,EAAG,UAAST,KAAM;QACnC;MACJ,CAAC,CAAC;MAEFI,SAAS,CAACE,IAAI,CAACI,KAAK,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZ,IAAIM,KAAK,EAAE;MACPK,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBACIF,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBd,MAAM,CAACe,GAAG,CAACC,KAAK,iBACbrB,OAAA;MAAAe,QAAA,EACKM,KAAK,CAACC;IAAI,GADLD,KAAK,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACf,EAAA,CAjCIH,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}