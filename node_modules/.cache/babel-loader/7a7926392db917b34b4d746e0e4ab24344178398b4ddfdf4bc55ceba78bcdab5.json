{"ast":null,"code":"var _jsxFileName = \"/home/shan/Desktop/remixify/toptunes/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\n// Auth context for the spotify login functionality\n\nimport hash from \"../hash\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as ROUTES from \"../constants/routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      setToken(_token);\n      // Set user\n      fetch(\"https://api.spotify.com/v1/me\", {\n        headers: {\n          Authorization: \"Bearer \" + _token\n        }\n      }).then(res => res.json()).then(data => {\n        setUser(data);\n        setLoading(false);\n        navigate(ROUTES.WEB_APP);\n      });\n    }\n  }, [navigate]);\n  const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n  const value = {\n    token,\n    user,\n    loading,\n    loginUrl\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s2(AuthProvider, \"0z9TaSdy7yez8k3Sb663Ixss0F0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","hash","useNavigate","ROUTES","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","token","setToken","user","setUser","loading","setLoading","navigate","_token","access_token","fetch","headers","Authorization","then","res","json","data","WEB_APP","loginUrl","authEndpoint","clientId","redirectUri","scopes","join","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shan/Desktop/remixify/toptunes/src/context/AuthContext.js"],"sourcesContent":["// AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\n// Auth context for the spotify login functionality\n\nimport hash from \"../hash\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as ROUTES from \"../constants/routes\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n    }\n\nexport const AuthProvider = ({ children }) => {\n    const [token, setToken] = useState(null);\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Set token\n        let _token = hash.access_token;\n\n        if (_token) {\n            // Set token\n            setToken(_token);\n            // Set user\n            fetch(\"https://api.spotify.com/v1/me\", {\n                headers: {\n                    Authorization: \"Bearer \" + _token\n                }\n            })\n                .then(res => res.json())\n                .then(data => {\n                    setUser(data);\n                    setLoading(false);\n                    navigate(ROUTES.WEB_APP);\n                });\n        }\n    }, [navigate]);\n\n    const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n        \"%20\"\n    )}&response_type=token&show_dialog=true`;\n\n    const value = {\n        token,\n        user,\n        loading,\n        loginUrl\n    };\n\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E;;AAEA,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,OAAOV,UAAU,CAACQ,WAAW,CAAC;AAC9B,CAAC;AAAAE,EAAA,CAFQD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ;IACA,IAAIoB,MAAM,GAAGlB,IAAI,CAACmB,YAAY;IAE9B,IAAID,MAAM,EAAE;MACR;MACAN,QAAQ,CAACM,MAAM,CAAC;MAChB;MACAE,KAAK,CAAC,+BAA+B,EAAE;QACnCC,OAAO,EAAE;UACLC,aAAa,EAAE,SAAS,GAAGJ;QAC/B;MACJ,CAAC,CAAC,CACGK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACVZ,OAAO,CAACY,IAAI,CAAC;QACbV,UAAU,CAAC,KAAK,CAAC;QACjBC,QAAQ,CAACf,MAAM,CAACyB,OAAO,CAAC;MAC5B,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,MAAMW,QAAQ,GAAI,GAAEC,YAAa,cAAaC,QAAS,iBAAgBC,WAAY,UAASC,MAAM,CAACC,IAAI,CACnG,KACJ,CAAE,uCAAsC;EAExC,MAAMC,KAAK,GAAG;IACVvB,KAAK;IACLE,IAAI;IACJE,OAAO;IACPa;EACJ,CAAC;EAED,oBAAOxB,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAAEA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAChF,CAAC;AAAA7B,GAAA,CAxCYF,YAAY;EAAA,QAIJP,WAAW;AAAA;AAAAuC,EAAA,GAJnBhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}