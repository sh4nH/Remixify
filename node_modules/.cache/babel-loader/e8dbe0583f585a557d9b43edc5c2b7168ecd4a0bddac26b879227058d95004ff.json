{"ast":null,"code":"var _jsxFileName = \"/home/shan/Desktop/MAIN FINAL TT/TopTunes/src/components/topsongs/TopSongs.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport styles from './TopSongs.module.css';\nimport { CLIENT_ID, REDIRECT_URI, AUTH_ENDPOINT, RESPONSE_TYPE, SCOPE } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopSongs = ({\n  token,\n  updateTracklist\n}) => {\n  _s();\n  useEffect(() => {\n    const fetchTopSongs = async () => {\n      try {\n        const response = await fetch(`https://api.spotify.com/v1/me/top/tracks?limit=20`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          localStorage.removeItem('token');\n          window.location.reload();\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        const tracks = data.items;\n        updateTracklist(tracks);\n      } catch (error) {\n        console.error(\"Error (TopSongs):\", error);\n      }\n    };\n\n    // Only fetch top songs if a valid token exists\n    if (token) {\n      fetchTopSongs();\n    }\n  }, [token, updateTracklist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.TopSongs,\n    children: !token && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=${SCOPE}`,\n        children: \"Login to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TopSongs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TopSongs;\nexport default TopSongs;\nvar _c;\n$RefreshReg$(_c, \"TopSongs\");","map":{"version":3,"names":["useEffect","styles","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","SCOPE","jsxDEV","_jsxDEV","TopSongs","token","updateTracklist","_s","fetchTopSongs","response","fetch","method","headers","Authorization","ok","localStorage","removeItem","window","location","reload","Error","data","json","tracks","items","error","console","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shan/Desktop/MAIN FINAL TT/TopTunes/src/components/topsongs/TopSongs.js"],"sourcesContent":["import { useEffect } from 'react';\nimport styles from './TopSongs.module.css';\nimport { CLIENT_ID, REDIRECT_URI, AUTH_ENDPOINT, RESPONSE_TYPE, SCOPE } from '../../config';\n\nconst TopSongs = ({ token, updateTracklist }) => {\n  \n  useEffect(() => {\n    const fetchTopSongs = async () => {\n      try {\n        const response = await fetch(\n          `https://api.spotify.com/v1/me/top/tracks?limit=20`, \n          {\n            method: \"GET\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (!response.ok) {\n          localStorage.removeItem('token');\n          window.location.reload();\n          throw new Error(\"Network response was not ok\");\n        }\n\n        const data = await response.json();\n        const tracks = data.items; \n\n        updateTracklist(tracks);\n      } catch (error) {\n        console.error(\"Error (TopSongs):\", error);\n      }\n    };\n\n    // Only fetch top songs if a valid token exists\n    if (token) {\n      fetchTopSongs();\n    }\n  }, [token, updateTracklist]);\n\n  return (\n    <div className={styles.TopSongs}>\n      {!token && (\n        <button>\n          <a href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&scope=${SCOPE}`}>Login to Spotify</a>\n        </button>\n      )}\n      {/* You can add other content or messages here if needed */}\n    </div>\n  );\n};\n\nexport default TopSongs;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,EAAEC,aAAa,EAAEC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAE/CZ,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,mDAAkD,EACnD;UACEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASR,KAAM;UACjC;QACF,CACF,CAAC;QAED,IAAI,CAACI,QAAQ,CAACK,EAAE,EAAE;UAChBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;UAChCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;UACxB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QAClC,MAAMC,MAAM,GAAGF,IAAI,CAACG,KAAK;QAEzBlB,eAAe,CAACiB,MAAM,CAAC;MACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF,CAAC;;IAED;IACA,IAAIpB,KAAK,EAAE;MACTG,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACH,KAAK,EAAEC,eAAe,CAAC,CAAC;EAE5B,oBACEH,OAAA;IAAKwB,SAAS,EAAE/B,MAAM,CAACQ,QAAS;IAAAwB,QAAA,EAC7B,CAACvB,KAAK,iBACLF,OAAA;MAAAyB,QAAA,eACEzB,OAAA;QAAG0B,IAAI,EAAG,GAAE9B,aAAc,cAAaF,SAAU,iBAAgBC,YAAa,kBAAiBE,aAAc,UAASC,KAAM,EAAE;QAAA2B,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7I;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9CIH,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}