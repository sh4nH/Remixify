{"ast":null,"code":"var _jsxFileName = \"/home/shan/Desktop/MAIN FINAL TT/TopTunes/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport TopSongs from \"./components/topsongs/TopSongs\";\nimport Playlist from \"./components/playlist/Playlist\";\nimport Tracklist from \"./components/tracklist/Tracklist\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // states\n  const [tracklist, setTracklist] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(null); // Initialize with null or an empty object\n\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n  const updateTracklist = array => {\n    setTracklist(array);\n  };\n  const addToPlaylist = newTrack => {\n    if (playlist.some(t => t.id === newTrack.id)) {} else {\n      setPlaylist(prev => [...prev, newTrack]);\n    }\n  };\n  const removeFromPlaylist = trackId => {\n    setPlaylist(prev => prev.filter(n => n.id !== trackId));\n  };\n  const currentUser = async () => {\n    try {\n      const response = await fetch(\"https://api.spotify.com/v1/me\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        localStorage.removeItem(\"token\");\n        window.location.reload();\n        throw new Error(\"Network response was not ok\");\n      }\n      const userData = await response.json();\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n  // Define the currentUser function using useCallback\n  const fetchCurrentUser = useCallback(async () => {\n    // Your code to fetch user data here\n  }, []); // Empty dependency array since currentUser doesn't depend on any props or state\n\n  // update the user state\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userData = await fetchCurrentUser();\n        setUser(userData);\n      } catch (error) {\n        // Handle any errors if necessary\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    if (token) {\n      fetchUserData();\n    }\n  }, [token, fetchCurrentUser]);\n\n  // Function to create a playlist (assuming you have the user's ID)\n  const createPlaylist = async (userId, playlistName, token) => {\n    try {\n      let playlistId;\n\n      // Create the playlist\n      const createResponse = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: playlistName,\n          description: \"New playlist created by app\",\n          public: false\n        })\n      });\n      if (!createResponse.ok) {\n        throw new Error(\"Error in createPlaylist. Network response was not ok\");\n      }\n      const createJsonResponse = await createResponse.json();\n      playlistId = createJsonResponse.id;\n      let uriArray = playlist.map(track => track.uri);\n      const addTracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uris: uriArray,\n          position: 0\n        })\n      });\n      if (!addTracksResponse.ok) {\n        throw new Error(\"Error in adding tracks to the playlist. Network response was not ok\");\n      }\n      setPlaylist([]);\n      setPlaylistName(\"\");\n      alert(`Your playlist ${playlistName} was successfully created!`);\n      return addTracksResponse.json();\n    } catch (error) {\n      throw error;\n    }\n  };\n  // Logout function\n  const userProfileClickHandler = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TopTunes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create a playlist with your top songs on Spotify.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dive into your top 20 songs, curate a playlist that speaks to your soul.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopSongs, {\n      token: token,\n      updateTracklist: updateTracklist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexItem\",\n        children: /*#__PURE__*/_jsxDEV(Tracklist, {\n          data: tracklist,\n          addToPlaylist: addToPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        className: \"flexItem\",\n        playlist: playlist,\n        data: tracklist,\n        removeFromPlaylist: removeFromPlaylist,\n        setPlaylistName: setPlaylistName,\n        playlistName: playlistName,\n        currentUser: currentUser,\n        createPlaylist: createPlaylist,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"220px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Created by Shan Hashir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logos-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/sh4nH/TopTunes\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"logo-link\",\n          children: /*#__PURE__*/_jsxDEV(FaGithub, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.linkedin.com/in/shan-hashir/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"logo-link\",\n          children: /*#__PURE__*/_jsxDEV(FaLinkedin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tylP15RTGw1J+54kRum9OemzlTI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopSongs","Playlist","Tracklist","useState","useEffect","useCallback","FaGithub","FaLinkedin","jsxDEV","_jsxDEV","App","_s","tracklist","setTracklist","playlist","setPlaylist","playlistName","setPlaylistName","token","setToken","user","setUser","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","updateTracklist","array","addToPlaylist","newTrack","some","t","id","prev","removeFromPlaylist","trackId","filter","n","currentUser","response","fetch","method","headers","Authorization","ok","removeItem","reload","Error","userData","json","error","fetchCurrentUser","fetchUserData","console","createPlaylist","userId","playlistId","createResponse","body","JSON","stringify","name","description","public","createJsonResponse","uriArray","map","track","uri","addTracksResponse","uris","position","alert","userProfileClickHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","style","marginTop","href","target","rel","_c","$RefreshReg$"],"sources":["/home/shan/Desktop/MAIN FINAL TT/TopTunes/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TopSongs from \"./components/topsongs/TopSongs\";\nimport Playlist from \"./components/playlist/Playlist\";\nimport Tracklist from \"./components/tracklist/Tracklist\";\nimport { useState, useEffect , useCallback} from \"react\";\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\n\nfunction App() {\n  // states\n  const [tracklist, setTracklist] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(null); // Initialize with null or an empty object\n\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n\n    if (!token && hash) {\n      token = hash\n        .substring(1)\n        .split(\"&\")\n        .find((elem) => elem.startsWith(\"access_token\"))\n        .split(\"=\")[1];\n\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n\n  const updateTracklist = (array) => {\n    setTracklist(array);\n  };\n\n  const addToPlaylist = (newTrack) => {\n    if (playlist.some((t) => t.id === newTrack.id)) {\n    } else {\n      setPlaylist((prev) => [...prev, newTrack]);\n    }\n  };\n\n  const removeFromPlaylist = (trackId) => {\n    setPlaylist((prev) => prev.filter((n) => n.id !== trackId));\n  };\n\n  const currentUser = async () => {\n    try {\n      const response = await fetch(\"https://api.spotify.com/v1/me\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        localStorage.removeItem(\"token\");\n        window.location.reload();\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const userData = await response.json();\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n  // Define the currentUser function using useCallback\n  const fetchCurrentUser = useCallback(async () => {\n    // Your code to fetch user data here\n  }, []); // Empty dependency array since currentUser doesn't depend on any props or state\n\n  // update the user state\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const userData = await fetchCurrentUser();\n        setUser(userData);\n      } catch (error) {\n        // Handle any errors if necessary\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n\n    if (token) {\n      fetchUserData();\n    }\n  }, [token, fetchCurrentUser]);\n\n  // Function to create a playlist (assuming you have the user's ID)\n  const createPlaylist = async (userId, playlistName, token) => {\n    try {\n      let playlistId;\n\n      // Create the playlist\n      const createResponse = await fetch(\n        `https://api.spotify.com/v1/users/${userId}/playlists`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name: playlistName,\n            description: \"New playlist created by app\",\n            public: false,\n          }),\n        }\n      );\n\n      if (!createResponse.ok) {\n        throw new Error(\"Error in createPlaylist. Network response was not ok\");\n      }\n\n      const createJsonResponse = await createResponse.json();\n      playlistId = createJsonResponse.id;\n\n      let uriArray = playlist.map((track) => track.uri);\n\n      const addTracksResponse = await fetch(\n        `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            uris: uriArray,\n            position: 0,\n          }),\n        }\n      );\n\n      if (!addTracksResponse.ok) {\n        throw new Error(\n          \"Error in adding tracks to the playlist. Network response was not ok\"\n        );\n      }\n\n      setPlaylist([]);\n      setPlaylistName(\"\");\n\n      alert(`Your playlist ${playlistName} was successfully created!`);\n\n      return addTracksResponse.json();\n    } catch (error) {\n      throw error;\n    }\n  };\n    // Logout function\n    const userProfileClickHandler = () => {\n      localStorage.removeItem(\"token\");\n      window.location.reload();   \n    }\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <h2>TopTunes</h2>\n        <h1>Create a playlist with your top songs on Spotify.</h1>\n        <h3>\n          Dive into your top 20 songs, curate a playlist that speaks to your\n          soul.\n        </h3>\n      </div>\n      <TopSongs token={token} updateTracklist={updateTracklist} />\n      {token ? (\n        <div className=\"flex\">\n          <div className=\"flexItem\">\n            <Tracklist data={tracklist} addToPlaylist={addToPlaylist} />\n          </div>\n          <Playlist\n            className=\"flexItem\"\n            playlist={playlist}\n            data={tracklist}\n            removeFromPlaylist={removeFromPlaylist}\n            setPlaylistName={setPlaylistName}\n            playlistName={playlistName}\n            currentUser={currentUser}\n            createPlaylist={createPlaylist}\n            token={token}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div style={{ marginTop: \"220px\" }}>\n        <p>Created by Shan Hashir</p>\n        <div className=\"logos-container\">\n          <a\n            href=\"https://github.com/sh4nH/TopTunes\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"logo-link\"\n          >\n            <FaGithub />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/shan-hashir/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"logo-link\"\n          >\n            <FaLinkedin />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}